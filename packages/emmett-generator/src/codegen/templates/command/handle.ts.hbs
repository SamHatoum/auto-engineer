import { CommandHandler, type EventStore } from '@event-driven-io/emmett';
import { evolve } from './evolve';
import { initialState } from './state';
import { decide } from './decide';
import type { {{commands.[0].type}} } from './commands';

const commandHandler = CommandHandler({
evolve,
initialState,
});

export const handle = async (
eventStore: EventStore,
command: {{commands.[0].type}}
): Promise<void> => {
    const streamId = `{{slice.stream}}-${command.data.{{slice.streamIdField}}}`;
    await commandHandler(eventStore, streamId, (state) =>
    decide(command, state),
    );
    };