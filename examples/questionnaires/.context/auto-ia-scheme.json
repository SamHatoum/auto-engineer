{
  "schema_description": "A questionnaire application allowing participants to answer questions, track progress, and submit responses",
  "atoms": {
    "description": "Atomic UI primitives reused from the design system",
    "items": {}
  },
  "molecules": {
    "description": "Reusable components composed from atoms",
    "items": {
      "HeroSection": {
        "description": "Welcome message section with call-to-action",
        "composition": {
          "atoms": ["card", "button"]
        }
      },
      "QuestionCard": {
        "description": "Individual question display with answer input",
        "composition": {
          "atoms": ["card", "button", "radio-group", "textarea"]
        }
      },
      "ProgressIndicator": {
        "description": "Shows questionnaire completion progress",
        "composition": {
          "atoms": ["progress", "badge"]
        }
      },
      "QuestionList": {
        "description": "List of answered and remaining questions",
        "composition": {
          "atoms": ["card", "checkbox"]
        }
      },
      "SubmissionConfirmation": {
        "description": "Success message after questionnaire submission",
        "composition": {
          "atoms": ["alert", "button"]
        }
      }
    }
  },
  "organisms": {
    "description": "Smart UI components with data-fetching or logic",
    "items": {
      "QuestionnaireProgress": {
        "description": "Displays current progress and manages question navigation",
        "composition": {
          "molecules": ["ProgressIndicator", "QuestionList", "QuestionCard"]
        },
        "data_requirements": [
          {
            "type": "query",
            "description": "Fetches current questionnaire progress and status",
            "trigger": "On page load and after each answer",
            "details": {
              "source": "QuestionnaireProgress projection",
              "gql": "query QuestionnaireProgress($participantId: ID!) {\n        questionnaireProgress(participantId: $participantId) {\n          questionnaireId\n          participantId\n          currentQuestionId\n          remainingQuestions\n          status\n          answers {\n            questionId\n            value\n          }\n        }\n      }"
            }
          }
        ],
        "specs": [
          "focus on the current question based on the progress state",
          "display the list of answered questions",
          "display the list of remaining questions",
          "show a progress indicator that is always visible as the user scrolls"
        ]
      },
      "QuestionnaireSubmission": {
        "description": "Handles answer submission and questionnaire completion",
        "composition": {
          "molecules": ["QuestionCard", "SubmissionConfirmation"]
        },
        "data_requirements": [
          {
            "type": "mutation",
            "description": "Submits an answer to a specific question",
            "trigger": "When user answers a question",
            "details": {
              "source": "AnswerQuestion command",
              "gql": "mutation AnswerQuestion($input: AnswerQuestionInput!) {\n        answerQuestion(input: $input) {\n          success\n        }\n      }"
            }
          },
          {
            "type": "mutation",
            "description": "Submits the completed questionnaire",
            "trigger": "When user clicks submit button",
            "details": {
              "source": "SubmitQuestionnaire command",
              "gql": "mutation SubmitQuestionnaire($input: SubmitQuestionnaireInput!) {\n        submitQuestionnaire(input: $input) {\n          success\n        }\n      }"
            }
          },
          {
            "type": "query",
            "description": "Checks if questionnaire is ready for submission",
            "trigger": "After each answer is submitted",
            "details": {
              "source": "QuestionnaireProgress projection",
              "gql": "query QuestionnaireProgress($participantId: ID!) {\n        questionnaireProgress(participantId: $participantId) {\n          questionnaireId\n          participantId\n          status\n          currentQuestionId\n          remainingQuestions\n          answers {\n            questionId\n            value\n          }\n        }\n      }"
            }
          }
        ],
        "specs": [
          "displays a success message when the answer is submitted",
          "display an error message when the answer submission is rejected",
          "enable the submit button when all questions are answered",
          "disable the submit button when all questions have not been answered",
          "display a confirmation message upon successful submission"
        ]
      }
    }
  },
  "pages": {
    "description": "Top-level views composed of organisms, molecules, and atoms",
    "items": {
      "Homepage": {
        "route": "/",
        "description": "Landing page with welcome message and questionnaire start option",
        "template": "landing-layout",
        "layout": {
          "organisms": []
        },
        "navigation": [
          {
            "on": "Start questionnaire button click",
            "to": "QuestionnairePage"
          }
        ],
        "specs": ["show a hero section with a welcome message", "allow user to start the questionnaire"]
      },
      "QuestionnairePage": {
        "route": "/questionnaire",
        "description": "Main questionnaire interface for answering questions and tracking progress",
        "template": "app-layout",
        "layout": {
          "organisms": ["QuestionnaireProgress", "QuestionnaireSubmission"]
        },
        "navigation": [
          {
            "on": "Questionnaire submission complete",
            "to": "Homepage"
          }
        ]
      }
    }
  }
}
