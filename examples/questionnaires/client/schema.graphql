type Query {
  questionnaireProgress(participantId: ID): [QuestionnaireProgress!]!
}

type QuestionnaireProgress {
  questionnaireId: String!
  participantId: String!
  status: String!
  currentQuestionId: String!
  remainingQuestions: String!
  answers: [QuestionnaireProgressAnswers!]!
}

type QuestionnaireProgressAnswers {
  questionId: String!
  value: String!
}

type Mutation {
  answerQuestion(input: AnswerQuestionInput!): MutationResponse!
}

type MutationResponse {
  success: Boolean!
  error: MutationError
}

type MutationError {
  type: String!
  message: String
}

input AnswerQuestionInput {
  questionnaireId: String!
  participantId: String!
  questionId: String!
  answer: String!
}